import os
import sys
sys.path.append(r"D:\PhD\YieldProject\Scripts\04_Analysis")
import yieldfunctions as yf
from copy import deepcopy
import pandas as pd
import geopandas as gpd
import numpy as np
import matplotlib.pyplot as plt
import contextily as cx

# Set paths to GDAL in virtual env to avoid proj.db errors
os.environ['PROJ_LIB'] = r"C:\Users\jacob\miniconda3\envs\yieldprojconda\Library\share\proj"
os.environ['GDAL_DATA'] = r"C:\Users\jacob\miniconda3\envs\yieldprojconda\Library\share"
pd.set_option('display.max_columns', None)
import importlib
importlib.reload(yf)

# User Params
synthDir = r"D:\PhD\YieldProject\Output_Detrended" + f"//Synthetic"
boxDir = r"D:\PhD\YieldProject\Output_Detrended\Plots" + f"//Boxplots"
#synthBarDir = r"D:\PhD\YieldProject\Output\Plots" + f"//SyntheticBarplot_{aggmethod}"
synthMapDir = r"D:\PhD\YieldProject\Output_Detrended\Plots" + f"//SyntheticMaps"

os.makedirs(boxDir, exist_ok=True)
os.makedirs(synthMapDir, exist_ok=True)
#os.makedirs(synthBarDir, exist_ok=True)


weeks = list(range(18,39))
#changeweeks = [18, 22, 27, 31]
month_dict = {'April': list(range(15, 18)), 'May': list(range(18, 22)), 'June': list(range(22, 27)),
              'July': list(range(27, 31)), 'August': list(range(31, 36)), 'September': list(range(36, 39))}

for week in weeks:
    str_week = str(week)
    df_week = pd.read_csv(synthDir + f"//SyntheticPreds_wheat_Week{week}.csv")
    df_week = df_week.rename(columns = {f'ModeCDM_{str_week}': 'ModeCDM',
                                        f'ModeCDM_{str(week-1)}': 'ModeCDM-1', f'ModeCDM_{str(week-2)}': 'ModeCDM-2',
                                        f'ModeCDM_{str(week-3)}': 'ModeCDM-3', f'ModeCDM_{str(week-4)}': 'ModeCDM-4',
                                        f'WMeanNdvi_{str_week}': 'WMeanNdvi',
                                        f'WMeanNdvi_{str(week-1)}': 'WMeanNdvi-1', f'WMeanNdvi_{str(week-2)}': 'WMeanNdvi-2',
                                        f'WMeanNdvi_{str(week-3)}': 'WMeanNdvi-3', f'WMeanNdvi_{str(week-4)}': 'WMeanNdvi-4'})
    if week == weeks[0]:
        df = deepcopy(df_week)
    else:
        df = pd.concat([df, df_week]).reset_index(drop=True)

# Add month to df
df['Month'] = df['Week'].apply(lambda week: next((k for k, v in month_dict.items() if week in v), None))

# Bar charts
# mean_results, mean_sig = yf.get_weekly_results(df, changeweeks, ndvi_level='Mean')
# yf.plot_weekly_results(mean_results, df, synthBarDir, ndvi_level = 'Mean')
# minus_results, minus_sig = yf.get_weekly_results(df, changeweeks, ndvi_level='-1SD')
# yf.plot_weekly_results(minus_results, df, synthBarDir, ndvi_level = '-1SD')
# plus_results, plus_sig = yf.get_weekly_results(df, changeweeks, ndvi_level='+1SD')
# yf.plot_weekly_results(plus_results, df, synthBarDir, ndvi_level = '+1SD')

# Maps
# yf.create_synthetic_maps(df, changeweeks, synthMapDir + '//Mean', ndvi_level = 'Mean')
# yf.create_synthetic_maps(df, changeweeks, synthMapDir + '//+1SD', ndvi_level = '+1SD')
# yf.create_synthetic_maps(df, changeweeks, synthMapDir + '//-1SD', ndvi_level = '-1SD')

# Boxplots
yf.onset_figures(df, boxDir, synthMapDir, ndvi_level = 'Mean')
yf.onset_figures(df, boxDir, synthMapDir, ndvi_level = '-1SD')
yf.onset_figures(df, boxDir, synthMapDir, ndvi_level = '+1SD')


# test is the raw data:
# Get each prov:
##ab = test2[test2['TWP_ID'].str.endswith(('4','5'))]
##sk = test2[test2['TWP_ID'].str.endswith(('2','3'))]
##mb = test2[test2['TWP_ID'].str.endswith(('1'))]
##
### Plot mean yield for trendline
##df_mean = ab.groupby('Year')['TotalYield'].mean().reset_index()
##plt.scatter(df_mean['Year'], df_mean['TotalYield'])
##m, b = np.polyfit(df_mean['Year'], df_mean['TotalYield'], 1)
##plt.plot(df_mean['Year'], m*df_mean['Year'] + b, color='red')
### Add labels
##plt.xlabel('Year')
##plt.ylabel('Mean Yield')
##plt.show()
# FOR ENTIRE PRAIRIES, m=11.70. MB:57.07. sk: 6.36. m=-4.79 (don't detrend)
# If we detrend 2010 to 2020: m=34.51. MB:76.81. SK:29.92. AB: 17.19
