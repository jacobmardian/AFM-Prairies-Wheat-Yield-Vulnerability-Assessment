# -*- coding: utf-8 -*-
"""
Created on Tue Mar 14 11:01:52 2023

@author: jacob
"""

import os, glob, sys
import dask
import xarray as xr
sys.path.append(r"D:\PhD\YieldProject\Scripts\02_Preprocess")
import yieldfunctions as yf

# Set paths to GDAL in virtual env to avoid proj.db errors
os.environ['PROJ_LIB'] = r"C:\Users\jacob\.conda\envs\yieldproj\Library\share\proj"
os.environ['GDAL_DATA'] = r"C:\Users\jacob\.conda\envs\yieldproj\Library\share"

# Config dask
dask.config.set(**{'array.slicing.split_large_chunks': True})

# User params
ndviDir = r"D:\PhD\YieldProject\Data\NDVI_Anomalies"
yieldPath = r"D:\PhD\YieldProject\Data\Yield"
outDir = r"D:\PhD\YieldProject\Data\YieldRasters"
templateDir = r"D:\PhD\YieldProject\Data\Template"

# Get ndvi template
ndviPath = ndviDir + "\\NDVIAnomalies_20102021_Baseline20022021.nc"
ndvi = xr.open_dataset(ndviPath, chunks = {'time':1,'x':500,'y':500})
ndvi = ndvi.set_coords(("spatial_ref"))
ndvi_template = ndvi.isel(time=0).compute().chunk('auto')
templatePath = templateDir + "//template.tif"
ndvi_template.rio.to_raster(templatePath)
proj = ndvi_template.spatial_ref.crs_wkt

# For yield, we have to duplicate the output 23 times for each year to match dims
canola = yf.create_yieldstack(os.path.join(yieldPath, "CanolaYield_Township.shp"), outDir, templatePath)
wheat = yf.create_yieldstack(os.path.join(yieldPath, "WheatYield_Township.shp"), outDir, templatePath)

# Write to NCF
canola.to_netcdf(path = outDir + "//CanolaYield_20102021.nc", engine="netcdf4", 
                 encoding = {"canola": {"dtype": "f4", 'zlib': True}})
wheat.to_netcdf(path = outDir + "//WheatYield_20102021.nc", engine="netcdf4", 
                 encoding = {"wheat": {"dtype": "f4", 'zlib': True}})

