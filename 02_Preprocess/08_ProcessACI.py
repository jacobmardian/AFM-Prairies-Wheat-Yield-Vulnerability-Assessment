# -*- coding: utf-8 -*-
"""
Created on Thu Feb  9 11:55:51 2023

@author: jacob
"""
import os, glob, sys
import dask
import xarray as xr
import rioxarray as rxr
from rioxarray.merge import merge_arrays
sys.path.append(r"D:\PhD\YieldProject\Scripts\02_Preprocess")
import yieldfunctions as yf

# Set paths to GDAL in virtual env to avoid proj.db errors
os.environ['PROJ_LIB'] = r"C:\Users\jacob\.conda\envs\yieldproj\Library\share\proj"
os.environ['GDAL_DATA'] = r"C:\Users\jacob\.conda\envs\yieldproj\Library\share"

# Config dask
dask.config.set(**{'array.slicing.split_large_chunks': True})

# User parameters
aciDir = r"D:\PhD\AAFC_Data\ACI\Raw"
tempDir = r"D:\PhD\AAFC_Data\ACI\Reprojected"
outDir = r"D:\PhD\AAFC_Data\ACI\Masks"
ndviDir = r"D:\PhD\YieldProject\Data\NDVI_Anomalies"

# Get ndvi template
ndviPath = ndviDir + "\\NDVIAnomalies_20102021_Baseline20022021.nc"
ndvi = xr.open_dataset(ndviPath, chunks = {'time':1,'x':500,'y':500})
ndvi = ndvi.set_coords(("spatial_ref"))
ndvi_template = ndvi.isel(time=0).compute().chunk('auto')
proj = ndvi_template.spatial_ref.crs_wkt

# Merge the provincial ACI for each year
for year in range(2010, 2022):
    print (year)
    flist = glob.glob(aciDir + f"//aci_{year}*.tif")
    if year > 2010:
        rasList = [rxr.open_rasterio(i).chunk('auto').squeeze() for i in flist]
        merged = merge_arrays(rasList)
        # for i in range(0, len(rasList)):
            # if i == 0:
            #     merged = rasList[i]
            # else:
            #     merged = merged.combine_first(rasList[i])
        merged = merged.rio.reproject_match(ndvi_template)
    else:
        merged = rxr.open_rasterio(flist[0]).chunk('auto').squeeze()
        merged = merged.rio.reproject_match(ndvi_template)
    if year == 2011:
        fmerge = outDir + f"//acimerged_{year}_prairies.tif"
        merged.rio.to_raster(fmerge)
    for crop in ['wheat', 'canola']:
        if crop == 'wheat':
            if year in [2011, 2012]:
                code = 140 # All wheat
            else: 
                code = 146 # Only spring wheat
        else:
            code = 153 # canola
        finalRas = merged.where(merged == code)
        outRas = outDir + f"//{crop}mask_{year}_prairies.tif"
        if not os.path.exists(outRas):
            finalRas.rio.to_raster(outRas)

canolastack = yf.create_maskstack("canola", outDir, ndvi_template)
canolastack.to_netcdf(outDir + "//canolamask.nc", encoding = {"canola": {"dtype": "int8", 'zlib': True}})
wheatstack = yf.create_maskstack("wheat", outDir, ndvi_template)
wheatstack.to_netcdf(outDir + "//wheatmask.nc", encoding = {"wheat": {"dtype": "int8", 'zlib': True}})

    


